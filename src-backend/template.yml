AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Api:
    OpenApiVersion: 3.0.1
  Function:
    Runtime: provided.al2023
    Handler: bootstrap
    MemorySize: 1024
    Timeout: 30
    Architectures:
      - arm64

Parameters:
  StreamerTableName:
    Type: String
    Description: DynamoDB table name for storing streamer state
  TwitchSecretArn:
    Type: String
    Description: ARN of the SecretsManager secret
  TwitchClientId:
    Type: String
    Description: Client ID for Twitch
  CallbackUrl:
    Type: String
    Description: URL for webhook callback
  SubscriptionUrl:
    Type: String
    Description: URL for Twitch Subscription endpoint
    Default: https://api.twitch.tv/helix/eventsub/subscriptions
  TokenUrl:
    Type: String
    Description: URL for Twitch Authorization endpoint
    Default: https://id.twitch.tv/oauth2/token
  StreamsUrl:
    Type: String
    Description: URL for Twitch streams endpoint
    Default: https://api.twitch.tv/helix/streams
  ChannelsUrl:
    Type: String
    Description: URL for Twitch channel endpoint
    Default: https://api.twitch.tv/helix/channels

Resources:
  NotisrApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: Notisr
      StageName: prod

  WebhookRegisterFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./target/lambda/webhook-register
      Environment:
        Variables:
          STREAMER_TABLE: !Ref StreamerTableName
          SECRET_ARN: !Ref TwitchSecretArn
          CALLBACK_URL: !Ref CallbackUrl
          SUBSCRIPTION_URL: !Ref SubscriptionUrl
          TOKEN_URL: !Ref TokenUrl
          STREAMS_URL: !Ref StreamsUrl
          CHANNELS_URL: !Ref ChannelsUrl
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutRequest
                - dynamodb:WriteRequest
                - dynamodb:PutItem
                - dynamodb:BatchGetItem
                - dynamodb:BatchWriteItem
              Resource: !Sub arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${StreamerTableName}
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: !Ref TwitchSecretArn
      Events:
        WebhookRegisterEvent:
          Type: Api
          Properties:
            Path: /register
            Method: post
            RestApiId: !Ref NotisrApi

  WebhookHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./target/lambda/webhook-handler
      Environment:
        Variables:
          STREAMER_TABLE: !Ref StreamerTableName
          SECRET_ARN: !Ref TwitchSecretArn
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            - Effect: Allow
              Action:
                - dynamodb:UpdateItem
              Resource: !Sub arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${StreamerTableName}
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: !Ref TwitchSecretArn
      Events:
        WebhookApi:
          Type: Api
          Properties:
            Path: /webhook
            Method: post
            RestApiId: !Ref NotisrApi

  StreamerTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref StreamerTableName
      AttributeDefinitions:
        - AttributeName: broadcaster_id
          AttributeType: S
      KeySchema:
        - AttributeName: broadcaster_id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  AppSyncDynamoRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AppSyncDynamoPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:BatchGetItem
                  - dynamodb:UpdateItem
                Resource: !GetAtt StreamerTable.Arn

  GraphQLApi:
    Type: AWS::Serverless::GraphQLApi
    Properties:
      Name: NotisrGQLApi
      Auth:
        Type: OPENID_CONNECT
        OpenIDConnect:
          Issuer: https://id.twitch.tv/oauth2
          ClientId: !Ref TwitchClientId
          IatTTL: 8640000
          AuthTTL: 8640000
      SchemaUri: ./schema.graphql
      DataSources:
        DynamoDb:
          StreamerTableSource:
            ServiceRoleArn: !GetAtt AppSyncDynamoRole.Arn
            TableName: !Ref StreamerTableName
            TableArn: !GetAtt StreamerTable.Arn
      Functions:
        BatchGetStreamers:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: StreamerTableSource
          CodeUri: ./appsync-functions/batchGetStreamers.js
        UpdateStreamer:
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
          DataSource: StreamerTableSource
          CodeUri: ./appsync-functions/updateStreamer.js
      Resolvers:
        Query:
          batchGetStreamers:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            Pipeline:
              - BatchGetStreamers
        Mutation:
          updateStreamer:
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
            CodeUri: ./appsync-functions/updateStreamer.js
            Pipeline:
              - UpdateStreamer

Outputs:
  GraphQLApiUrl:
    Description: 'AppSync GraphQL endpoint URL'
    Value: !GetAtt GraphQLApi.GraphQLUrl

  GraphQLApiId:
    Description: 'AppSync API ID'
    Value: !GetAtt GraphQLApi.ApiId
